[gd_resource type="VisualShader" load_steps=9 format=3 uid="uid://decwiypxdlcbv"]

[sub_resource type="VisualShaderNodeColorFunc" id="VisualShaderNodeColorFunc_x7s5c"]
function = 1

[sub_resource type="VisualShaderNodeVectorFunc" id="VisualShaderNodeVectorFunc_fb55j"]
function = 23

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_fkjcd"]
operator = 2

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_ew6t7"]
parameter_name = "steps"
hint = 2
max = 256.0
step = 1.0
default_value_enabled = true
default_value = 8.0

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_73c7q"]
input_name = "screen_uv"

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_752iv"]
operator = 3

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_0xwvw"]
source = 1

[sub_resource type="VisualShaderNodeColorFunc" id="VisualShaderNodeColorFunc_3dyy5"]
function = 2

[resource]
code = "shader_type canvas_item;
render_mode blend_mix;

uniform sampler2D screen_tex_frg_8 : hint_screen_texture;
uniform float steps : hint_range(0, 256, 1) = 8;



void fragment() {
// Input:6
	vec2 n_out6p0 = SCREEN_UV;


	vec4 n_out8p0;
// Texture2D:8
	n_out8p0 = texture(screen_tex_frg_8, n_out6p0);


	vec3 n_out9p0;
// ColorFunc:9
	{
		vec3 c = vec3(n_out8p0.xyz);
		vec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);
		vec4 p = mix(vec4(c.bg, K.wz), vec4(c.gb, K.xy), step(c.b, c.g));
		vec4 q = mix(vec4(p.xyw, c.r), vec4(c.r, p.yzx), step(p.x, c.r));
		float d = q.x - min(q.w, q.y);
		float e = 1.0e-10;
		n_out9p0 = vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), d / (q.x + e), q.x);
	}


// FloatParameter:4
	float n_out4p0 = steps;


// VectorOp:3
	vec3 n_out3p0 = n_out9p0 * vec3(n_out4p0);


// VectorFunc:2
	vec3 n_out2p0 = round(n_out3p0);


// VectorOp:7
	vec3 n_out7p0 = n_out2p0 / vec3(n_out4p0);


	vec3 n_out10p0;
// ColorFunc:10
	{
		vec3 c = n_out7p0;
		vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);
		vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);
		n_out10p0 = c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);
	}


// Output:0
	COLOR.rgb = n_out10p0;


}
"
mode = 1
flags/light_only = false
nodes/fragment/2/node = SubResource("VisualShaderNodeVectorFunc_fb55j")
nodes/fragment/2/position = Vector2(-160, 100)
nodes/fragment/3/node = SubResource("VisualShaderNodeVectorOp_fkjcd")
nodes/fragment/3/position = Vector2(-360, 100)
nodes/fragment/4/node = SubResource("VisualShaderNodeFloatParameter_ew6t7")
nodes/fragment/4/position = Vector2(-640, 260)
nodes/fragment/6/node = SubResource("VisualShaderNodeInput_73c7q")
nodes/fragment/6/position = Vector2(-1260, 120)
nodes/fragment/7/node = SubResource("VisualShaderNodeVectorOp_752iv")
nodes/fragment/7/position = Vector2(40, 200)
nodes/fragment/8/node = SubResource("VisualShaderNodeTexture_0xwvw")
nodes/fragment/8/position = Vector2(-860, 80)
nodes/fragment/9/node = SubResource("VisualShaderNodeColorFunc_3dyy5")
nodes/fragment/9/position = Vector2(-640, 120)
nodes/fragment/10/node = SubResource("VisualShaderNodeColorFunc_x7s5c")
nodes/fragment/10/position = Vector2(200, 240)
nodes/fragment/connections = PackedInt32Array(3, 0, 2, 0, 4, 0, 3, 1, 2, 0, 7, 0, 4, 0, 7, 1, 6, 0, 8, 0, 8, 0, 9, 0, 9, 0, 3, 0, 7, 0, 10, 0, 10, 0, 0, 0)
